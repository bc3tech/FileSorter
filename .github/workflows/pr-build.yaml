name: PR Build

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "LICENSE"
  issue_comment:                                     
    types: [created]

jobs:
  getPrRef:
    runs-on: ubuntu-latest
    outputs:
      pr_ref: ${{ steps.pr_info.outputs.ref }}
    steps:
      - name: Get PR info
        id: pr_info
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            PR_NUMBER="${{ github.event.pull_request.number }}"
          else
            PR_NUMBER="${{ github.event.issue.number }}"
          fi
          PR_API="https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER"
          PR_JSON=$(curl -s -H "Authorization: token $GH_TOKEN" $PR_API)
          echo "ref=$(echo $PR_JSON | jq -r .head.ref)" >> $GITHUB_OUTPUT

  isCodeOwner:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/test-pack')
    needs: getPrRef
    runs-on: ubuntu-latest
    outputs:
      isCodeOwner: ${{ steps.check.outputs.isCodeOwner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.getPrRef.outputs.pr_ref }}
      - name: Check if comment author is a code owner
        id: check
        run: |
          CODEOWNERS=$(cat .github/CODEOWNERS)
          COMMENT_AUTHOR="${{ github.event.comment.user.login }}"
          if echo "$CODEOWNERS" | grep -q "$COMMENT_AUTHOR"; then
            echo "isCodeOwner=true" >> $GITHUB_OUTPUT
          else
            echo "isCodeOwner=false" >> $GITHUB_OUTPUT
          fi

  build-release:
    if: needs.isCodeOwner.outputs.isCodeOwner == 'true'
    needs: [getPrRef,isCodeOwner]
    runs-on: windows-latest
    env:
      PR_REF: ${{ needs.getPrRef.outputs.pr_ref }}
      APP_VERSION: "0.2.${{ github.run_number }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.PR_REF }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: dotnet build
        run: dotnet build -c release

      - name: dotnet publish
        run: dotnet publish -o pub -c release -p:PublishSingleFile=true -p:Version=${{ env.APP_VERSION }}

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: pub/FileSorter.*

  choco-pack:
    if: needs.isCodeOwner.outputs.isCodeOwner == 'true'
    needs: [getPrRef,isCodeOwner,build-release]
    runs-on: windows-latest
    env:
      PR_REF: ${{ needs.getPrRef.outputs.pr_ref }}
      APP_VERSION: "0.2.${{ github.run_number }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.PR_REF }}

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: bin

      - name: Package
        run: cd choco && choco pack --version ${{ env.APP_VERSION }}

      - name: Upload nupkg
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: choco/*.nupkg

  build-debug:
    needs: [getPrRef]
    runs-on: windows-latest
    env:
      PR_REF: ${{ needs.getPrRef.outputs.pr_ref }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.PR_REF }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: dotnet build
        run: dotnet build -c debug
